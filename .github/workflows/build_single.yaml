name: Build firmware - Single variant

on:
  workflow_dispatch:
    # Note: We are at the Github maximum of 10 inputs
    inputs:
      lang:
        description: 'Language:'
        options:
            - en
            - an
            - bg
            - ca
            - cz
            - da
            - de
            - el
            - el_CY
            - es
            - eu
            - fi
            - fr
            - gl
            - hr
            - hu
            - it
            - jp_kana
            - ko_KR
            - nl
            - pl
            - pt
            - pt_br
            - ro
            - ru
            - sk
            - sv
            - tr
            - uk
            - vi
            - zh_CN
            - zh_TW
        required: true
        type: choice
        default: 'en'
      screen:
        description: 'Screen (Std, None):'
        options: [STD, NONE]
        required: true
        type: choice
        default: STD
      extruder:
        description: 'Extruder (Std, Extruder+, Bicolor, MK8):'
        options: [STD, EXTRUDER_PLUS, BICOLOR, MK8]
        required: true
        type: choice
        default: STD
      zscrews:
        description: 'Z-Screws (Std, Expert (T8-4), T8-8, T8-2):'
        options: [STD, EXPERT, T8_8, T8_2]
        required: true
        type: choice
        default: STD
      size:
        description: 'Size (Std, XL):'
        options: [STD, XL]
        required: true
        type: choice
        default: STD
      thermistor:
        description: 'Thermistor type (White, Black):'
        options: [WHITE, BLACK]
        required: true
        type: choice
        default: WHITE
      warping:
        description: 'Anti-Warping (Std, Atelier3D):'
        options: [STD, BED_ATELIER3D]
        required: true
        type: choice
        default: STD
      mb:
        description: 'Motherboard (STD = MKS1.5 Dagoma pinout, MKS1.5 Std pinout):'
        options: [STD, MKS15STD] # DAGF5, DAGD6
        required: true
        type: choice
        default: STD
      head:
        description: 'Print head (Std, BLtouch, Z122):'
        options: [STD, STD_BLTOUCH, Z122, Z122_BLTOUCH]
        required: true
        type: choice
        default: STD
      special:
        description: 'Special features:'
        options: [NONE, BASIC, SERIAL_DEBUG, BED_BILINEAR, BED_UNIFIED, PID, CLASSIC_JERK, NO_S_CURVE, XY_FREQ, NO_ADAPTIVE_SMOOTHING, FT_MOTION, STATUS_ICONS]
        required: true
        type: choice
        default: NONE

  workflow_call:
    inputs:
      lang:
        description: 'Language:'
        required: true
        type: string
      screen:
        description: 'Screen (Std, None):'
        required: true
        type: string
      extruder:
        description: 'extruder (Std, Extruder+, Bicolor):'
        required: true
        type: string
      zscrews:
        description: 'Z-Screws (Std, Expert Pack):'
        required: true
        type: string
      size:
        description: 'Size (Std, XL):'
        required: true
        type: string
      thermistor:
        description: 'Thermistor type (White, Black):'
        required: true
        type: string
      warping:
        description: 'Anti-Warping (Std, Atelier3D):'
        required: true
        type: string
      mb:
        description: 'Motherboard (STD = MKS1.5 Dagoma pinout, MKS1.5 Std pinout):'
        required: true
        type: string
      head:
        description: 'Print head (Std, Z122):'
        required: true
        type: string
      special:
        description: 'special Marlin features:'
        required: true
        type: string

concurrency:
  group: "\
    ${{ github.workflow_ref }}-${{ github.ref }}\
    -lang:${{ inputs.lang }}\
    -screen:${{ inputs.screen }}\
    -extruder:${{ inputs.extruder }}\
    -zscrews:${{ inputs.zscrews }}\
    -size:${{ inputs.size }}\
    -thermistor:${{ inputs.thermistor }}\
    -warping:${{ inputs.warping }}\
    -mb:${{ inputs.mb }}\
    -head:${{ inputs.head }}\
    -special:${{ inputs.special }}\
    "
  cancel-in-progress: true

jobs:
  build:
    env:
      BUILD_FILE: ${{ format('{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12}{13}{14}{15}{16}{17}{18}{19}{20}',
        (inputs.mb         == 'DAGF5' && 'Ultim') || (inputs.mb == 'DAGD6' && 'Ultv2') || 'DE200',
        '_2.1.x-',
        (inputs.screen     == 'NONE'  && 'noLCD') || inputs.lang,
        (inputs.screen     != 'NONE'  && inputs.screen != 'STD' && '-') || '',
        (inputs.screen     != 'NONE'  && inputs.screen != 'STD' && inputs.screen) || '',
        (inputs.extruder   != 'STD'   && '-') || '',
        (inputs.extruder   != 'STD'   && inputs.extruder) || '',
        (inputs.zscrews    != 'STD'   && '-') || '',
        (inputs.zscrews    != 'STD'   && inputs.zscrews) || '',
        (inputs.size       != 'STD'   && '-') || '',
        (inputs.size       != 'STD'   && inputs.size) || '',
        (inputs.thermistor != 'WHITE' && '-') || '',
        (inputs.thermistor != 'WHITE' && inputs.thermistor) || '',
        (inputs.warping    != 'STD'   && '-') || '',
        (inputs.warping    != 'STD'   && inputs.warping) || '',
        (inputs.mb         != 'STD'   && '-') || '',
        (inputs.mb         != 'STD'   && inputs.mb) || '',
        (inputs.head       != 'STD'   && '-') || '',
        (inputs.head       != 'STD'   && inputs.head) || '',
        (inputs.special    != 'NONE'  && '-Special-') || '',
        (inputs.special    != 'NONE'  && inputs.special) || ''
        ) }}
    name: "Build:
      ${{ (inputs.screen == 'NONE' && 'nolcd') || inputs.lang }}
      ${{ (inputs.screen != 'NONE' && inputs.screen != 'STD' && inputs.screen) || '' }}
      extrud:${{ inputs.extruder }}
      screws:${{ inputs.zscrews }}
      size:${{ inputs.size }}
      thermistor:${{ inputs.thermistor }}
      warp:${{ inputs.warping }}
      mb:${{ inputs.mb }}
      head:${{ inputs.head }}
      special:${{ inputs.special }}
      "
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup cache
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/pip
          ~/.platformio/
        key: ${{ github.workflow_ref }}
        save-always: true

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        architecture: 'x64'

    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade platformio

    - name: "PlatformIO: ${{ env.BUILD_FILE }}.hex"
      run: platformio run
      env:
        PLATFORMIO_BUILD_FLAGS: "\
          -D DE200_LANGUAGE=${{ inputs.lang }}
          -D DE200_SCREEN_${{ inputs.screen }}
          -D DE200_EXTRUDER_${{ inputs.extruder }}
          -D DE200_ZSCREWS_${{ inputs.zscrews }}
          -D DE200_SIZE_${{ inputs.size }}
          -D DE200_THERMISTOR_${{ inputs.thermistor }}
          -D DE200_WARPING_${{ inputs.warping }}
          -D DE200_MB_${{ inputs.mb }}
          -D DE200_HEAD_${{ inputs.head }}
          -D DE200_SPECIAL_${{ inputs.special }}\
          "

    - name: Post build script
      run: |
        # Display filesize
        ls -l .pio/build/mega2560/firmware.hex
        # Builds must use no more than 253,952 bytes of firmware memory.
        # Hex build file records use c. 45 bytes for each 16 bytes of firmware.
        # End of file is an extra 15 bytes.
        # So build file should be no more than 714,255 bytes in size.
        # Fail job if build file is bigger than this.
        # Otherwise calculate approx memory as xKB_of_248KB and add to end of filename.
        mv .pio/build/mega2560/firmware.hex .pio/build/mega2560/$BUILD_FILE.hex

    - name: Upload artefact
      if: ${{ github.event_name != 'release' }}
      uses: actions/upload-artifact@v4
      # https://github.com/marketplace/actions/upload-a-build-artifact
      with:
        name: ${{ env.BUILD_FILE }}.hex
        path: .pio/build/mega2560/${{ env.BUILD_FILE }}.hex
        compression-level: 9
        if-no-files-found: error

    - name: Upload release
      if: ${{ github.event_name == 'release' }}
      run: gh release upload ${{github.event.release.tag_name}} .pio/build/mega2560/$BUILD_FILE.hex
      env:
        GITHUB_TOKEN: ${{ github.TOKEN }}

    # - name: Save build to repo
      # if temp branch exists
      # Add/commit the build file to the temp branch
      # https://github.com/marketplace/actions/add-commit